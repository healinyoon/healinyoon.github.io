<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jenkins on ringu blog</title>
    <link>https://healinyoon.github.io/categories/jenkins/</link>
    <description>Recent content in jenkins on ringu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 31 Aug 2020 13:26:55 +0900</lastBuildDate>
    
        <atom:link href="https://healinyoon.github.io/categories/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Jenkins Node Heap Memory 사이즈 설정하기(-Xmx/-Xms 옵션)</title>
      <link>https://healinyoon.github.io/2020/08/20200831_jenkins_node_heap_size/</link>
      <pubDate>Mon, 31 Aug 2020 13:26:55 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200831_jenkins_node_heap_size/</guid>
      <description>목적 Jenkins node heap memory 사이즈 변경 방법 정리 참고 자료 Java Memory Management for Java Virtual Machine (JVM) Java Platform, Standard Edition HotSpot Virtual Machine Garbage Collection Tuning Guide CloudBees Jenkins JVM troubleshooting Jenkins 권장 사양 내용 Jenkins에서는 다양한 JAVA 옵션을 인수로 받</description>
    </item>
    
    <item>
      <title>Jenkins Master-Slave 구성하기</title>
      <link>https://healinyoon.github.io/2020/08/20200827_jenkins_master_slave/</link>
      <pubDate>Thu, 27 Aug 2020 19:35:29 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_jenkins_master_slave/</guid>
      <description>Jenkins Master-Slave Jenkins는 기본적으로 단일 서버로 동작합니다. 그러나 단일 서버는 다음과 같은 상황을 충족하기 충분하지 않습니다. 빌드 테스트를 위한 다양한 환경이 필</description>
    </item>
    
    <item>
      <title>CI/CD와 Jenkins</title>
      <link>https://healinyoon.github.io/2020/08/20200827_cicd_and_jenkins/</link>
      <pubDate>Thu, 27 Aug 2020 19:25:40 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_cicd_and_jenkins/</guid>
      <description>CI/CD란 CI/CD는 애플리케이션 개발 단계를 자동화하여 보다 작은 코드 단위와 짧은 주기로 Test와 Build를 수행하고 고객에게 제공하는 방법을 의미</description>
    </item>
    
    <item>
      <title>HUGO 블로그 새글 업로드하기</title>
      <link>https://healinyoon.github.io/2020/08/20200827_hugo_blog/</link>
      <pubDate>Thu, 27 Aug 2020 19:13:30 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_hugo_blog/</guid>
      <description>HUGO 글 생성하기 $ hugo new {파일명} HUGO 블로그 빌드 $ hugo -t {테마명} Git push $ cd public $ git add . $ git commit -m &amp;quot;{commit 메세지}&amp;quot; $ git push origin master $ cd .. $ git add . $ git commit -m &amp;quot;{commit 메</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://healinyoon.github.io/about/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://healinyoon.github.io/about/</guid>
      <description>배우는 것을 좋아하는 3년차 개발자 입니다. 주요 기술 Linux Infrastructure DevOps 프로젝트</description>
    </item>
    
    <item>
      <title>Docker 설치하기(CentOS)</title>
      <link>https://healinyoon.github.io/2019/06/20190611_docker_install/</link>
      <pubDate>Sat, 01 Jun 2019 23:52:44 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2019/06/20190611_docker_install/</guid>
      <description>Intro 이번 포스트에서는 CentOS에 Docker를 설치하는 방법을 정리했습니다. 1. Docker 설치하기 # yum 패키지 업데이트 yum update # docker, docker registry 설치 yum -y install docker docker-registry 2. Docker 실행 및</description>
    </item>
    
  </channel>
</rss>

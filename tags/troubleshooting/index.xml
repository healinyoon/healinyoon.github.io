<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>troubleshooting on ringu blog</title>
    <link>https://healinyoon.github.io/tags/troubleshooting/</link>
    <description>Recent content in troubleshooting on ringu blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 14 Dec 2020 11:50:39 +0900</lastBuildDate>
    
        <atom:link href="https://healinyoon.github.io/tags/troubleshooting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kubernetes CI/CD</title>
      <link>https://healinyoon.github.io/2020/12/20201214_k8s_ci_cd/</link>
      <pubDate>Mon, 14 Dec 2020 11:50:39 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/12/20201214_k8s_ci_cd/</guid>
      <description>Intro Kubernetes CI/CD 구축기 Helm으로 Jenkins를 Kubernetes에 배포하기 Persistence Volume을 위한 NFS 서버 구성 참고: https://sarc.io/index.php/os/1780-ubuntu-nfs-configuration 이 포스트는 NFS을 {NFS server</description>
    </item>
    
    <item>
      <title>Kubernets(쿠버네티스) Troubleshooting (3) - Pod STATUS가 Running되지 않고 Error 또는 CrashLoopBackOff을 반복할 때</title>
      <link>https://healinyoon.github.io/2020/12/20201214_k8s_troubleshooting_3/</link>
      <pubDate>Mon, 14 Dec 2020 11:50:39 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/12/20201214_k8s_troubleshooting_3/</guid>
      <description>이슈 Jenkins를 Helm으로 설치하는 과정에서 이슈가 하나 발생했다. 컨테이너 초기화가 계속 실패했는데, 아래와 같이 STATUS가 Running이</description>
    </item>
    
    <item>
      <title>Kubernets(쿠버네티스) Troubleshooting (2) - Node가 NotReady됐는데 docker가 죽어있을 때</title>
      <link>https://healinyoon.github.io/2020/12/20201209_k8s_troubleshooting_2/</link>
      <pubDate>Wed, 09 Dec 2020 16:11:19 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/12/20201209_k8s_troubleshooting_2/</guid>
      <description>요약 k8s cluster의 특정 Node가 NotReady됐는데 docker가 stop 상태였다. 2개의 원인이 만나서 발생: apt 자동 업데이트 + docker.io 패키지 버그 해결</description>
    </item>
    
    <item>
      <title>Kubernets(쿠버네티스) Troubleshooting (1) - PV Terminating에서 멈출 때</title>
      <link>https://healinyoon.github.io/2020/12/20201209_k8s_troubleshooting_1/</link>
      <pubDate>Wed, 09 Dec 2020 10:56:19 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/12/20201209_k8s_troubleshooting_1/</guid>
      <description>에러 PV를 delete 하는 과정에서 계속 &amp;ldquo;Terminating&amp;rdquo; 상태에서 멈춰 있다. # kubectl delete pv jenkins2-pv persistentvolume &amp;quot;jenkins2-pv&amp;quot; deleted # kubectl describe pv jenkins2-pv Name: jenkins2-pv Labels: &amp;lt;none&amp;gt; Annotations: pv.kubernetes.io/bound-by-controller: yes Finalizers: [kubernetes.io/pv-protection] StorageClass: Status: Terminating (lasts 27m) Claim: jenkins/jenkins Reclaim Policy: Retain Access Modes: RWO VolumeMode: Filesystem Capacity: 10Gi Node Affinity: &amp;lt;none&amp;gt; Message: Source: Type: NFS</description>
    </item>
    
    <item>
      <title>네트워킹을 위한 IP address, Subnet, CIDR 표기법 이해하기</title>
      <link>https://healinyoon.github.io/2020/12/%EC%9E%91%EC%84%B1%EC%A4%9120201201_ip_address_subnets_cidr/</link>
      <pubDate>Tue, 01 Dec 2020 13:13:54 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/12/%EC%9E%91%EC%84%B1%EC%A4%9120201201_ip_address_subnets_cidr/</guid>
      <description>소개 서버를 관리하다보면 네트워크에 대한 지식에 아쉬움을 느낄 때가 종종 있다. Understanding IP Addresses, Subnets, and CIDR Notation for Networking의 내용을 정리하면서 네트워크의 기본 개념</description>
    </item>
    
    <item>
      <title>네트워크 용어, 인터페이스 및 프로토콜 기초 이해하기</title>
      <link>https://healinyoon.github.io/2020/11/20201127_network_basic/</link>
      <pubDate>Fri, 27 Nov 2020 11:22:24 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/11/20201127_network_basic/</guid>
      <description>소개 서버를 관리하다보면 네트워크에 대한 지식에 아쉬움을 느낄 때가 종종 있다. An Introduction to Networking Terminology, Interfaces, and Protocols의 내용을 정리하면서 네트워크의 기본 개념을 살</description>
    </item>
    
    <item>
      <title>Docker Image의 핵심 기술: Layer</title>
      <link>https://healinyoon.github.io/2020/11/20201125_docker_image_layer/</link>
      <pubDate>Wed, 25 Nov 2020 15:12:04 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/11/20201125_docker_image_layer/</guid>
      <description>Docker image는 container를 만들기 위한 템플릿이다. registry에 존재하는 image를 가져와 사용할 수도 있고, image를 만들고 실행하</description>
    </item>
    
    <item>
      <title>Docker 개요</title>
      <link>https://healinyoon.github.io/2020/11/20201125_docker_overview/</link>
      <pubDate>Wed, 25 Nov 2020 13:06:23 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/11/20201125_docker_overview/</guid>
      <description>The Docker platform Docker는 어플리케이션을 패키징하고 실행할 수 있는 Container라는 격리된 환경을 제공한다. Container는 hypervisor</description>
    </item>
    
    <item>
      <title>java(openjdk) 설치 및 환경 변수 설정</title>
      <link>https://healinyoon.github.io/2020/11/20201113_install_java/</link>
      <pubDate>Fri, 13 Nov 2020 14:16:05 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/11/20201113_install_java/</guid>
      <description>jdk8 설치 버전 확인 $ java -version repository 업데이트 $ sudo apt-get update openjdk 설치 $ sudo apt-get install openjdk-8-jdk 설치 확인 $ java -version openjdk version &amp;quot;1.8.0_275&amp;quot; OpenJDK Runtime Environment (build 1.8.0_275-8u275-b01-0ubuntu1~18.04-b01) OpenJDK 64-Bit Server VM (build 25.275-b01, mixed mode) 환경 변수 설정 javac 설치 경로 확인 # javac -version javac 1.8.0_275 # which</description>
    </item>
    
    <item>
      <title>Kubernets(쿠버네티스) with GPU 구축하기</title>
      <link>https://healinyoon.github.io/2020/10/20201023_kubernetes_with_gpu/</link>
      <pubDate>Fri, 23 Oct 2020 10:56:19 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/10/20201023_kubernetes_with_gpu/</guid>
      <description>Intro Kubernetes에서 GPU를 사용하도록 환경을 구축하고 사용해보자. 사전 요구 사항 아래의 내용이 완료되었다는 전제로 진행하므로, 아직 충족되지 않은</description>
    </item>
    
    <item>
      <title>GPU 성능 비교하기: Host vs Container(&#43;Container에서 GPU 사용하기)</title>
      <link>https://healinyoon.github.io/2020/10/20201023_gpu_performance_host_vs_container/</link>
      <pubDate>Fri, 23 Oct 2020 10:50:18 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/10/20201023_gpu_performance_host_vs_container/</guid>
      <description>Intro 회사에서 쿠버네티스 업무를 하다가 &amp;ldquo;컨테이너 위에서도 GPU 성능이 보장되는가?&amp;ldquo;라는 질문이 나왔다. 쿠버네티스 운영 중에 자주 마주</description>
    </item>
    
    <item>
      <title>Kuberenets 특정 버전으로 설치하기</title>
      <link>https://healinyoon.github.io/2020/10/20201009_k8s_install_specific_version/</link>
      <pubDate>Fri, 09 Oct 2020 12:48:29 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/10/20201009_k8s_install_specific_version/</guid>
      <description>배경 회사에서 Kubernetes를 운영하다보면 클러스터에 새로운 worker node를 추가해야하는 일이 종종 생깁니다. 문제는 apt-get 등 기본 패키지 관리 도구를 사용하</description>
    </item>
    
    <item>
      <title>Azure CLI 설치하기 with virtualenv</title>
      <link>https://healinyoon.github.io/2020/09/20201023_azure_cli_with_virtualenv/</link>
      <pubDate>Tue, 15 Sep 2020 14:53:35 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/09/20201023_azure_cli_with_virtualenv/</guid>
      <description>Azure CLI를 virtualenv 환경에서 설치하기 Host 서버에 그냥 설치하면 파이썬 버전 문제로 실행이 안될 수 있다. virtualenv 를 설치하고 az cli 를 설치하는 방법이다. $ pip install virtualenv $ mkdir azure-cli-with-python3 $ which python3 $</description>
    </item>
    
    <item>
      <title>Kubernetes Cluster 설치하기(ubuntu18.04)</title>
      <link>https://healinyoon.github.io/2020/09/20200828_install_kubernetes_cluster_ubuntu/</link>
      <pubDate>Wed, 02 Sep 2020 17:11:38 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/09/20200828_install_kubernetes_cluster_ubuntu/</guid>
      <description>Kubernetes Cluster 설치하기 이 페이지에서는 ubuntu18.04에 kubeadm tool을 설치하고 이를 사용하여 kubernetes cluster를 구축하는 방법을 정리했습니다. 구성 H/W 구성하</description>
    </item>
    
    <item>
      <title>쿠버네티스 POD Network</title>
      <link>https://healinyoon.github.io/2020/09/%EB%AF%B8%EC%99%8420200901_k8s_pod_network/</link>
      <pubDate>Tue, 01 Sep 2020 13:33:15 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/09/%EB%AF%B8%EC%99%8420200901_k8s_pod_network/</guid>
      <description>Pod Network pod network가 헷갈려서 정리용으로 만든 페이지 공식 사이트의 설명: Installing a Pod network add-on</description>
    </item>
    
    <item>
      <title>Jenkins Node Heap Memory 사이즈 설정하기(-Xmx/-Xms 옵션)</title>
      <link>https://healinyoon.github.io/2020/08/20200831_jenkins_node_heap_size/</link>
      <pubDate>Mon, 31 Aug 2020 13:26:55 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200831_jenkins_node_heap_size/</guid>
      <description>목적 Jenkins node heap memory 사이즈 변경 방법 정리 참고 자료 Java Memory Management for Java Virtual Machine (JVM) Java Platform, Standard Edition HotSpot Virtual Machine Garbage Collection Tuning Guide CloudBees Jenkins JVM troubleshooting Jenkins 권장 사양 Jenkins Heap Memory 옵션 Jenkins에서는 다양한 JAVA 옵션을 인</description>
    </item>
    
    <item>
      <title>Jenkins Master-Slave 구성하기</title>
      <link>https://healinyoon.github.io/2020/08/20200827_jenkins_master_slave/</link>
      <pubDate>Thu, 27 Aug 2020 19:35:29 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_jenkins_master_slave/</guid>
      <description>Jenkins Master-Slave Jenkins는 기본적으로 단일 서버로 동작합니다. 그러나 단일 서버는 다음과 같은 상황을 충족하기 충분하지 않습니다. 빌드 테스트를 위한 다양한 환경이 필</description>
    </item>
    
    <item>
      <title>CI/CD와 Jenkins</title>
      <link>https://healinyoon.github.io/2020/08/20200827_cicd_and_jenkins/</link>
      <pubDate>Thu, 27 Aug 2020 19:25:40 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_cicd_and_jenkins/</guid>
      <description>CI/CD란 CI/CD는 애플리케이션 개발 단계를 자동화하여 보다 작은 코드 단위와 짧은 주기로 Test와 Build를 수행하고 고객에게 제공하는 방법을 의미</description>
    </item>
    
    <item>
      <title>HUGO 블로그 새글 업로드하기</title>
      <link>https://healinyoon.github.io/2020/08/20200827_hugo_blog/</link>
      <pubDate>Thu, 27 Aug 2020 19:13:30 +0900</pubDate>
      
      <guid>https://healinyoon.github.io/2020/08/20200827_hugo_blog/</guid>
      <description>HUGO 글 생성하기 $ hugo new {파일명} HUGO 블로그 빌드 $ hugo -t {테마명} Git push $ cd public $ git add . $ git commit -m &amp;quot;{commit 메세지}&amp;quot; $ git push origin master $ cd .. $ git add . $ git commit -m &amp;quot;{commit 메</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://healinyoon.github.io/about/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://healinyoon.github.io/about/</guid>
      <description>배우는 것을 좋아하는 3년차 개발자 입니다. 주요 기술 Linux Infrastructure DevOps 프로젝트</description>
    </item>
    
  </channel>
</rss>
